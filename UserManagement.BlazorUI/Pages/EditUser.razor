@page "/edit-user/{userId:int}"
@using UserManagement.BlazorUI.APIService
@using UserManagement.Web.Models.Users
@inject UserAPiService UserService
@inject NavigationManager Navigation

<h3>Edit User</h3>

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="forename">Forename</label>
            <InputText id="forename" class="form-control" @bind-Value="user.Forename" />
        </div>
        <div class="form-group">
            <label for="surname">Surname</label>
            <InputText id="surname" class="form-control" @bind-Value="user.Surname" />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="user.Email" />
        </div>
        <div class="form-group">
            <label for="dateOfBirth">Date of Birth</label>
            <InputDate id="dateOfBirth" class="form-control" @bind-Value="user.DateOfBirth" />
        </div>
        <div class="form-group">
            <label for="isActive">Active</label>
            <InputCheckbox id="isActive" class="  form-check" @bind-Value="user.IsActive" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </EditForm>
}
@code {
    [Parameter]
    public int userId { get; set; }

    private UserListItemViewModel user = new UserListItemViewModel()
        {
            Forename = "",
            Surname = "",
            Email = "",
        };

    protected override async Task OnInitializedAsync()
    {
        user = await UserService.GetUserAsync(userId);
    }

    private async Task HandleValidSubmit()
    {
        await UserService.UpdateUserAsync(user);
        Navigation.NavigateTo("/");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }
}

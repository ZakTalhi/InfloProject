@page "/"
@using UserManagement.BlazorUI.APIService
@using UserManagement.Web.Models.Users
@inject UserAPiService UserService
@inject NavigationManager Navigation

<h3>User List</h3>

<button class="btn btn-primary" @onclick="AuditsLog">Audit Logs</button>

<button class="btn btn-primary" @onclick="AddUser">Add User</button>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Forename</th>
                <th>Surname</th>
                <th>Email</th>
                <th>Date of Birth</th>
                <th>Active</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.Forename</td>
                    <td>@user.Surname</td>
                    <td>@user.Email</td>
                    <td>@user.DateOfBirth.ToShortDateString()</td>
                    <td>@(user.IsActive?"Active":"Inactive") </td>
                    <td>
                        <button class="btn btn-secondary" @onclick="() => EditUser(user.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button>
                        <button class="btn btn-danger" @onclick="() => UserAudit(user.Id)">Audit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<UserListItemViewModel>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsersAsync();
    }

    private void AddUser()
    {
        Navigation.NavigateTo("/add-user");
    }

    private void AuditsLog()
    {
        Navigation.NavigateTo("/audits");
    }

    private void EditUser(long userId)
    {
        Navigation.NavigateTo($"/edit-user/{userId}");
    }

    private async Task DeleteUser(long userId)
    {
        await UserService.DeleteUserAsync(userId);
        users = await UserService.GetUsersAsync();
    }
    private void UserAudit(long userId)
    {
        Navigation.NavigateTo($"/user-audit-timeline/{userId}");
    }

    
}
